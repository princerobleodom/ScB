! function r(n, i, p) {
    function s(e, t) {
        if (!i[e]) {
            if (!n[e]) {
                var o = "function" == typeof require && require;
                if (!t && o) return o(e, !0);
                if (u) return u(e, !0);
                throw (t = new Error("Cannot find module '" + e + "'")).code = "MODULE_NOT_FOUND", t
            }
            o = i[e] = {
                exports: {}
            }, n[e][0].call(o.exports, function(t) {
                return s(n[e][1][t] || t)
            }, o, o.exports, r, n, i, p)
        }
        return i[e].exports
    }
    for (var u = "function" == typeof require && require, t = 0; t < p.length; t++) s(p[t]);
    return s
}({
    1: [function(t, e, o) {
        "use strict";
        Element.prototype.matches || (Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector), Element.prototype.closest || (Element.prototype.closest = function(t) {
            var e = this;
            do {
                if (e.matches(t)) return e
            } while (null !== (e = e.parentElement || e.parentNode) && 1 === e.nodeType);
            return null
        })
    }, {}],
    2: [function(t, e, o) {
        "use strict";
        "NodeList" in window && !NodeList.prototype.forEach && (NodeList.prototype.forEach = function(t, e) {
            e = e || window;
            for (var o = 0; o < this.length; o++) t.call(e, this[o], o, this)
        })
    }, {}],
    3: [function(t, e, o) {
        "use strict";
        String.prototype.includes || (String.prototype.includes = function(t, e) {
            if (t instanceof RegExp) throw TypeError("first argument must not be a RegExp");
            return -1 !== this.indexOf(t, e = void 0 === e ? 0 : e)
        })
    }, {}],
    4: [function(t, e, o) {
        "use strict";
        Element.prototype.remove || (Element.prototype.remove = function() {
            this.parentElement && this.parentElement.removeChild(this)
        }), NodeList.prototype.remove || (NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {
            for (var t = this.length - 1; 0 <= t; t--) this[t] && this[t].parentElement && this[t].parentElement.removeChild(this[t])
        })
    }, {}]
}, {}, [1, 2, 3, 4]);